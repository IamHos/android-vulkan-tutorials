apply plugin: 'com.android.library'

/* Build Validation Layer source code in https://github.com/KhronosGroup/Vulkan-ValidationLayers.git
   Steps:
      1. cd tutorial03_traceable_layers/layerlib
      2. git clone --recursive https://github.com/KhronosGroup/Vulkan-ValidationLayers.git
      3. cd Vulkan-ValidationLayers/build-android
      4. ./update_external_sources_android.sh --no-build
        (use the update_external_sources_android.bat for Windows OS)
      5. Switch to Studio IDE, sync the project and build etc
 */
def LAYER_SRC=projectDir.toString() + '/Vulkan-ValidationLayers'
android {
    compileSdkVersion 31
    ndkVersion '22.1.7171670'

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        externalNativeBuild {
            // I could not get ndk-build with Application.mk, so for now we need to
            // pass all settings in the Application.mk as command line parameters to ndk-build.
            ndkBuild.arguments "NDK_MODULE_PATH=${LAYER_SRC}/build-android",
                               "NDK_PROJECT_PATH=${LAYER_SRC}/build-android",
                               'APP_MODULES=VkLayer_khronos_validation',
                               'APP_PLATFORM=android-26',
                               'NDK_TOOLCHAIN_VERSION=clang',
                               'APP_STL=c++_static',
                               'NDK_DEBUG=1', 'APP_OPTIM=debug',
                               '-j8'   // set up the right cpu count, should but do not know
                                       // how to get it from org.gradle.workers.max
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        ndkBuild.path "${LAYER_SRC}/build-android/jni/Android.mk"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}
